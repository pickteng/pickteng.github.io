<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://pickteng.github.io/atom.xml" rel="self"/>
  
  <link href="https://pickteng.github.io/"/>
  <updated>2023-08-27T10:07:17.275Z</updated>
  <id>https://pickteng.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue+elementui Carousel 走马灯 一次轮播4张图片</title>
    <link href="https://pickteng.github.io/posts/2360078537.html"/>
    <id>https://pickteng.github.io/posts/2360078537.html</id>
    <published>2021-08-19T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.275Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-carousel</span> <span class="attr">:loop</span>=<span class="string">&quot;false&quot;</span> <span class="attr">:autoplay</span>=<span class="string">&quot;false&quot;</span> <span class="attr">height</span>=<span class="string">&quot;204px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-carousel-item</span> <span class="attr">class</span>=<span class="string">&quot;el-car-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(list, index) in dataList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-for</span>=<span class="string">&quot;(imgList,index2) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;top-img&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgList.img&quot;</span> <span class="attr">:alt</span>=<span class="string">&quot;imgList.title&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-carousel-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-carousel</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="后端返回数据"><a href="#后端返回数据" class="headerlink" title="后端返回数据"></a>后端返回数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dataList</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;111&quot;</span>,</span><br><span class="line">          <span class="string">&quot;url&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">          <span class="string">&quot;img&quot;</span>: <span class="string">&quot;xxx&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;222&quot;</span>,</span><br><span class="line">          <span class="string">&quot;url&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">          <span class="string">&quot;img&quot;</span>: <span class="string">&quot;xxx&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;333&quot;</span>,</span><br><span class="line">          <span class="string">&quot;url&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">          <span class="string">&quot;img&quot;</span>: <span class="string">&quot;xxx&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;444&quot;</span>,</span><br><span class="line">          <span class="string">&quot;url&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">          <span class="string">&quot;img&quot;</span>: <span class="string">&quot;xxx&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;555&quot;</span>,</span><br><span class="line">          <span class="string">&quot;url&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">          <span class="string">&quot;img&quot;</span>: <span class="string">&quot;xxx&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;666&quot;</span>,</span><br><span class="line">          <span class="string">&quot;url&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">          <span class="string">&quot;img&quot;</span>: <span class="string">&quot;xxx&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br></pre></td></tr></table></figure><h2 id="处理后端返回的数据"><a href="#处理后端返回的数据" class="headerlink" title="处理后端返回的数据"></a>处理后端返回的数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> newDataList = []</span><br><span class="line">   <span class="keyword">let</span> current = <span class="number">0</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">dataList</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">dataList</span>.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;=<span class="variable language_">this</span>.<span class="property">dataList</span>.<span class="property">length</span>-<span class="number">1</span>;i++)&#123;</span><br><span class="line">       <span class="keyword">if</span>(i%<span class="number">4</span> !== <span class="number">0</span> || i === <span class="number">0</span> )&#123;</span><br><span class="line">         <span class="keyword">if</span>(!newDataList[current])&#123;</span><br><span class="line">           newDataList.<span class="title function_">push</span>([<span class="variable language_">this</span>.<span class="property">dataList</span>[i]])</span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           newDataList[current].<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="property">dataList</span>[i])</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         current++</span><br><span class="line">         newDataList.<span class="title function_">push</span>([<span class="variable language_">this</span>.<span class="property">dataList</span>[i]])</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">dataList</span> = [...newDataList]</span><br></pre></td></tr></table></figure><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.el-car-item</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="selector-class">.top-img</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">284px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">184px</span>;</span><br><span class="line">      <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;vue&quot;&gt;&lt;a href=&quot;#vue&quot; class=&quot;headerlink&quot; title=&quot;vue&quot;&gt;&lt;/a&gt;vue&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    
    <category term="Element" scheme="https://pickteng.github.io/tag/Element/"/>
    
  </entry>
  
  <entry>
    <title>element-ui tooltip手动设置宽度</title>
    <link href="https://pickteng.github.io/posts/2736856151.html"/>
    <id>https://pickteng.github.io/posts/2736856151.html</id>
    <published>2021-07-29T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.275Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-tooltip placement=&quot;top&quot;&gt;         </span><br><span class="line">&lt;template slot=&quot;content&quot;&gt;</span><br><span class="line">     &lt;p style=&quot;max-width:500px;&quot;&gt;提示内容&lt;/p&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">   &lt;div class=&quot;info-mes&quot;&gt;展示内容&lt;/div&gt;</span><br><span class="line">&lt;/el-tooltip&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    
    <category term="Element UI" scheme="https://pickteng.github.io/tag/Element-UI/"/>
    
  </entry>
  
  <entry>
    <title>element-ui 表单验证</title>
    <link href="https://pickteng.github.io/posts/1103307926.html"/>
    <id>https://pickteng.github.io/posts/1103307926.html</id>
    <published>2020-10-17T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.275Z</updated>
    
    <content type="html"><![CDATA[<h2 id="element-ui-表单验证"><a href="#element-ui-表单验证" class="headerlink" title="element-ui 表单验证"></a>element-ui 表单验证</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="keyword">var</span> <span class="title function_">passwordValidate</span> = (<span class="params">rule,value,callback</span>)=&gt;&#123;</span><br><span class="line"><span class="keyword">let</span> reg = <span class="string">&#x27;正则&#x27;</span></span><br><span class="line"><span class="keyword">if</span>(!reg.<span class="title function_">test</span>(value))&#123;</span><br><span class="line"><span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;xxxx&#x27;</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">callback</span>() <span class="comment">// 必须要加</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">formData</span>:&#123;</span><br><span class="line"><span class="attr">username</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="attr">user</span>:&#123;</span><br><span class="line"><span class="attr">password</span>:<span class="string">&#x27;&#x27;</span> <span class="comment">// 多层嵌套</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">rule</span>:&#123;</span><br><span class="line"><span class="attr">username</span>:[</span><br><span class="line">&#123;<span class="attr">required</span>:<span class="literal">true</span>,<span class="attr">message</span>:<span class="string">&#x27;必填&#x27;</span>,<span class="attr">trigger</span>:<span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">&#123;<span class="attr">min</span>:<span class="number">2</span>,<span class="attr">max</span>:<span class="number">5</span>,<span class="attr">message</span>:<span class="string">&#x27;2-5位&#x27;</span>,<span class="attr">trigger</span>:<span class="string">&#x27;blur&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="attr">required</span>:<span class="literal">true</span>,<span class="attr">message</span>:<span class="string">&#x27;xxx&#x27;</span>，<span class="attr">pattern</span>:<span class="regexp">/正则/</span>,<span class="attr">trigger</span>:<span class="string">&#x27;blur&#x27;</span>&#125;</span><br><span class="line">],</span><br><span class="line"><span class="string">&#x27;user.password&#x27;</span>:[</span><br><span class="line">&#123;<span class="attr">required</span>:<span class="literal">true</span>,<span class="attr">message</span>:<span class="string">&#x27;必填&#x27;</span>,<span class="attr">trigger</span>:<span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">&#123;<span class="attr">validator</span>:passwordValidate，<span class="attr">trigger</span>:<span class="string">&#x27;blur&#x27;</span>&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="表单提交验证"><a href="#表单提交验证" class="headerlink" title="表单提交验证"></a>表单提交验证</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">submitForm</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$ref</span>[<span class="string">&#x27;formName&#x27;</span>].<span class="title function_">validate</span>(valid)=&gt;&#123;</span><br><span class="line"><span class="keyword">if</span>(valid)&#123;</span><br><span class="line"><span class="comment">// 提交成功时触发</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// 提交失败时触发</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;element-ui-表单验证&quot;&gt;&lt;a href=&quot;#element-ui-表单验证&quot; class=&quot;headerlink&quot; title=&quot;element-ui 表单验证&quot;&gt;&lt;/a&gt;element-ui 表单验证&lt;/h2&gt;&lt;figure class=&quot;highli</summary>
      
    
    
    
    
    <category term="Element UI" scheme="https://pickteng.github.io/tag/Element-UI/"/>
    
  </entry>
  
  <entry>
    <title>db.collection.get()获取不到数据---微信小程序云开发</title>
    <link href="https://pickteng.github.io/posts/2126508159.html"/>
    <id>https://pickteng.github.io/posts/2126508159.html</id>
    <published>2020-07-02T15:29:07.000Z</published>
    <updated>2023-08-27T10:07:17.275Z</updated>
    
    <content type="html"><![CDATA[<h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从in_theaters云数据库里获取三条数据</span></span><br><span class="line"><span class="keyword">let</span> res = <span class="keyword">await</span> db.<span class="title function_">collection</span>(<span class="string">&quot;in_theaters&quot;</span>).<span class="title function_">where</span>(&#123;&#125;).<span class="title function_">limit</span>(<span class="number">3</span>).<span class="title function_">get</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;res=&gt;&#x27;</span>,res)</span><br></pre></td></tr></table></figure><h4 id="运行结果：获取不到数据库数据"><a href="#运行结果：获取不到数据库数据" class="headerlink" title="运行结果：获取不到数据库数据"></a>运行结果：获取不到数据库数据</h4><p><img src="/posts/2126508159/2020070211561671.png" alt="图片"></p><h4 id="解决：修改数据库权限"><a href="#解决：修改数据库权限" class="headerlink" title="解决：修改数据库权限"></a><strong>解决</strong>：修改数据库权限</h4><p><img src="/posts/2126508159/20200702115807699.png" alt="图片"></p><h4 id="改完权限之后运行：成功拿到"><a href="#改完权限之后运行：成功拿到" class="headerlink" title="改完权限之后运行：成功拿到"></a>改完权限之后运行：成功拿到</h4><p><img src="/posts/2126508159/20200702115929564.png" alt="图片"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;代码：&quot;&gt;&lt;a href=&quot;#代码：&quot; class=&quot;headerlink&quot; title=&quot;代码：&quot;&gt;&lt;/a&gt;代码：&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    
    <category term="微信小程序" scheme="https://pickteng.github.io/tag/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>css超出显示省略号</title>
    <link href="https://pickteng.github.io/posts/1297471716.html"/>
    <id>https://pickteng.github.io/posts/1297471716.html</id>
    <published>2020-07-01T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.275Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">overflow: hidden; // 溢出隐藏</span><br><span class="line"> </span><br><span class="line">text-overflow: ellipsis; // 显示省略号</span><br><span class="line"> </span><br><span class="line">white-space: nowrap; // 不换行</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    
    <category term="CSS" scheme="https://pickteng.github.io/tag/CSS/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序页面间事件通信错误Cannot read property emit of undefined</title>
    <link href="https://pickteng.github.io/posts/399976084.html"/>
    <id>https://pickteng.github.io/posts/399976084.html</id>
    <published>2020-06-30T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.279Z</updated>
    
    <content type="html"><![CDATA[<h4 id="报错信息："><a href="#报错信息：" class="headerlink" title="报错信息："></a>报错信息：</h4><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">VM1836:1 thirdScriptError</span></span><br><span class="line"><span class="language-xml">Cannot read property &#x27;emit&#x27; of undefined;at pages/board/board onReady function;at api navigateTo success callback function</span></span><br><span class="line"><span class="language-xml">TypeError: Cannot read property &#x27;emit&#x27; of undefined</span></span><br><span class="line"><span class="language-xml">    at Function.success (http://127.0.0.1:17382/appservice/pages/board/board.js:32:26)</span></span><br><span class="line"><span class="language-xml">    at Object.success (http://127.0.0.1:17382/appservice/__dev__/WAService.js:3:14159)</span></span><br><span class="line"><span class="language-xml">    at u (http://127.0.0.1:17382/appservice/__dev__/WAService.js:4:6009)</span></span><br><span class="line"><span class="language-xml">    at http://127.0.0.1:17382/appservice/__dev__/WAService.js:4:6192</span></span><br><span class="line"><span class="language-xml">    at n.<span class="tag">&lt;<span class="name">anonymous</span>&gt;</span> (http://127.0.0.1:17382/appservice/__dev__/asdebug.js:1:10293)</span></span><br><span class="line"><span class="language-xml">    at http://127.0.0.1:17382/appservice/__dev__/WAService.js:3:14159</span></span><br><span class="line"><span class="language-xml">    at http://127.0.0.1:17382/appservice/__dev__/WAService.js:8:25162</span></span><br><span class="line"><span class="language-xml">console.error @ VM1836:1</span></span><br><span class="line"><span class="language-xml">errorReport @ VM1843 WAService.js:3</span></span><br><span class="line"><span class="language-xml">thirdErrorReport @ VM1843 WAService.js:3</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:3</span></span><br><span class="line"><span class="language-xml">u @ VM1843 WAService.js:4</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:4</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1840 asdebug.js:1</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:3</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:8</span></span><br><span class="line"><span class="language-xml">setTimeout (async)</span></span><br><span class="line"><span class="language-xml">setTimeout @ VM1843 WAService.js:8</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1840 asdebug.js:1</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1840 asdebug.js:1</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1840 asdebug.js:1</span></span><br><span class="line"><span class="language-xml">_ws.onmessage @ VM1840 asdebug.js:1</span></span><br><span class="line"><span class="language-xml">VM1836:1 thirdScriptError</span></span><br><span class="line"><span class="language-xml">this.getOpenerEventChannel is not a function;at &quot;pages/detail/detail&quot; page lifeCycleMethod onLoad function</span></span><br><span class="line"><span class="language-xml">TypeError: this.getOpenerEventChannel is not a function</span></span><br><span class="line"><span class="language-xml">    at r.onLoad (http://127.0.0.1:17382/appservice/pages/detail/detail.js:17:29)</span></span><br><span class="line"><span class="language-xml">    at r.<span class="tag">&lt;<span class="name">anonymous</span>&gt;</span> (http://127.0.0.1:17382/appservice/__dev__/WAService.js:18:24831)</span></span><br><span class="line"><span class="language-xml">    at D (http://127.0.0.1:17382/appservice/__dev__/WAService.js:18:1254)</span></span><br><span class="line"><span class="language-xml">    at F (http://127.0.0.1:17382/appservice/__dev__/WAService.js:18:2027)</span></span><br><span class="line"><span class="language-xml">    at K (http://127.0.0.1:17382/appservice/__dev__/WAService.js:18:3339)</span></span><br><span class="line"><span class="language-xml">    at Function.<span class="tag">&lt;<span class="name">anonymous</span>&gt;</span> (http://127.0.0.1:17382/appservice/__dev__/WAService.js:18:6274)</span></span><br><span class="line"><span class="language-xml">    at http://127.0.0.1:17382/appservice/__dev__/WAService.js:18:12486</span></span><br><span class="line"><span class="language-xml">    at http://127.0.0.1:17382/appservice/__dev__/WAService.js:5:22695</span></span><br><span class="line"><span class="language-xml">    at Array.forEach (<span class="tag">&lt;<span class="name">anonymous</span>&gt;</span>)</span></span><br><span class="line"><span class="language-xml">    at Function.<span class="tag">&lt;<span class="name">anonymous</span>&gt;</span> (http://127.0.0.1:17382/appservice/__dev__/WAService.js:5:22675)</span></span><br><span class="line"><span class="language-xml">console.error @ VM1836:1</span></span><br><span class="line"><span class="language-xml">errorReport @ VM1843 WAService.js:3</span></span><br><span class="line"><span class="language-xml">thirdErrorReport @ VM1843 WAService.js:3</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:3</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:18</span></span><br><span class="line"><span class="language-xml">D @ VM1843 WAService.js:18</span></span><br><span class="line"><span class="language-xml">F @ VM1843 WAService.js:18</span></span><br><span class="line"><span class="language-xml">K @ VM1843 WAService.js:18</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:18</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:18</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:5</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:5</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1843 WAService.js:4</span></span><br><span class="line"><span class="language-xml">o @ VM1840 asdebug.js:1</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1840 asdebug.js:1</span></span><br><span class="line"><span class="language-xml">(anonymous) @ VM1840 asdebug.js:1</span></span><br><span class="line"><span class="language-xml">_ws.onmessage @ VM1840 asdebug.js:1</span></span><br></pre></td></tr></table></figure><h4 id="解决：把本地设置里的调试库调高！！！"><a href="#解决：把本地设置里的调试库调高！！！" class="headerlink" title="解决：把本地设置里的调试库调高！！！"></a>解决：把本地设置里的调试库调高！！！</h4><p><img src="/posts/399976084/20200630114436485.jpg" alt="调试库"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;报错信息：&quot;&gt;&lt;a href=&quot;#报错信息：&quot; class=&quot;headerlink&quot; title=&quot;报错信息：&quot;&gt;&lt;/a&gt;报错信息：&lt;/h4&gt;&lt;figure class=&quot;highlight handlebars&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu</summary>
      
    
    
    
    
    <category term="微信小程序" scheme="https://pickteng.github.io/tag/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>jQuery封装ajax的方法</title>
    <link href="https://pickteng.github.io/posts/3855898246.html"/>
    <id>https://pickteng.github.io/posts/3855898246.html</id>
    <published>2020-05-02T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、-get"><a href="#1、-get" class="headerlink" title="1、$.get()"></a>1、$.get()</h1><p>参数有4个，必填参数是url地址，其他参数都是选填参数，可以没有，参数的形式是对象形式。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$.get(&#123;</span></span><br><span class="line">    <span class="attr">url :</span> <span class="string">地址(必填),</span></span><br><span class="line">    <span class="attr">data :</span> <span class="string">携带的参数，对象形式,</span></span><br><span class="line">    <span class="attr">dataType :</span> <span class="string">期望的数据类型，如果为json，会将会断返回的json串，自动解析,</span></span><br><span class="line">    <span class="attr">success :</span> <span class="string">function()&#123;</span></span><br><span class="line">       <span class="string">请求成功时执行的函数</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br></pre></td></tr></table></figure><h1 id="2、-post"><a href="#2、-post" class="headerlink" title="2、$.post()"></a>2、$.post()</h1><p>参数有4个，必填参数是url地址，其他参数都是选填参数，可以没有，参数的形式是对象形式。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$.post(&#123;</span></span><br><span class="line">    <span class="attr">url :</span> <span class="string">地址(必填),</span></span><br><span class="line">    <span class="attr">data :</span> <span class="string">携带的参数，对象形式,</span></span><br><span class="line">    <span class="attr">dataType :</span> <span class="string">期望的数据类型，如果为json，会将会断返回的json串，自动解析,</span></span><br><span class="line">    <span class="attr">success :</span> <span class="string">function()&#123;&#125;</span> <span class="string">请求成功时执行的函数</span></span><br><span class="line"><span class="string">&#125;)</span></span><br></pre></td></tr></table></figure><h1 id="3、-ajax"><a href="#3、-ajax" class="headerlink" title="3、$.ajax()"></a>3、$.ajax()</h1><p>有n个参数，默认请求方式是 get 方式</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$.ajax(&#123;</span></span><br><span class="line"><span class="string">常用：</span></span><br><span class="line">    <span class="attr">url :</span> <span class="string">地址,</span></span><br><span class="line">    <span class="attr">type :</span> <span class="string">请求方式，默认值get方式,</span></span><br><span class="line">    <span class="attr">data :</span> &#123;&#125; <span class="string">传参参数，必须是对象形式,</span></span><br><span class="line">    <span class="attr">dataType :</span> <span class="string">json</span> <span class="string">,</span> <span class="string">设定为json，会自动解析反应体中的json串,</span></span><br><span class="line">    <span class="attr">success :</span> <span class="string">function()&#123;&#125;</span> <span class="string">请求成功时执行的函数</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">不常用：</span></span><br><span class="line">    <span class="attr">async :</span> <span class="string">设定是否异步,默认值是true,异步执行ajax请求</span></span><br><span class="line">    <span class="attr">error :</span> <span class="string">function()&#123;&#125;</span>  <span class="string">请求错误时执行的函数</span></span><br><span class="line">                          <span class="string">请求成功时不会执行</span></span><br><span class="line">    <span class="attr">timeout :</span> <span class="string">设定时间,单位</span> <span class="string">毫秒</span></span><br><span class="line">              <span class="string">如果请求时间超过设定的时间,认为是请求失败</span></span><br><span class="line">              <span class="string">必须是异步执行</span></span><br><span class="line">    <span class="attr">cache :</span> <span class="string">设定是否缓存请求结果</span></span><br><span class="line">            <span class="string">默认值是</span> <span class="literal">true</span><span class="string">,缓存请求结果</span></span><br><span class="line">            <span class="string">必须是get方式,这个设定才起作用</span></span><br><span class="line">            <span class="string">post方式不会缓存,设定也没有效果</span></span><br><span class="line"><span class="attr">context :</span> <span class="string">指定</span> <span class="string">执行函数中</span> <span class="string">this的指向</span></span><br><span class="line"><span class="string">&#125;)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、-get&quot;&gt;&lt;a href=&quot;#1、-get&quot; class=&quot;headerlink&quot; title=&quot;1、$.get()&quot;&gt;&lt;/a&gt;1、$.get()&lt;/h1&gt;&lt;p&gt;参数有4个，必填参数是url地址，其他参数都是选填参数，可以没有，参数的形式是对象形式。&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="jQuery" scheme="https://pickteng.github.io/tag/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>面向对象编程</title>
    <link href="https://pickteng.github.io/posts/4207367335.html"/>
    <id>https://pickteng.github.io/posts/4207367335.html</id>
    <published>2020-04-17T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.287Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p>所谓的面向对象，是一种编程思想，代码的书写格式，之前为了简化代码，我们是将程序封装为函数的形式来调用，函数会有一些小问题：</p><pre><code>函数内部定义的局部作用域变量，函数外部无法直接调用函数调用使用时，会占用大量的系统内存，容易造成数据溢出，数据泄露，容易被黑客攻击函数一般只是封装一些模块化的功能</code></pre><p>复杂程序的封装会封装成其他形式，使用面向对象的方式来封装程序</p><p>面向过程和面向对象编程思想的区别</p><p>举例生活中的实例 : 中午要吃饺子</p><pre><code>   面向过程    1,和面    2,和饺子馅    3,包饺子--擀皮,放馅,包饺子    4,烧水    5,水开了煮饺子    6,捞饺子    7,吃饺子        面向对象 1,找一个饺子馆 --- 封装的面向对象的程序,完成制作饺子的过程,我们只要点就可以了 2,点饺子 --- 调用封装的程序 3,做好了吃饺子 4,结账</code></pre><p>总结：</p><pre><code>面向过程：自己独立的一步一步的完成程序的定义和执行面向对象：有封装好的面向对象的程序           直接调用执行就可以了           功能和作用类似于 封装好的函数           但是 封装的语法和思想与函数不同</code></pre><h2 id="面向对象的基本思想"><a href="#面向对象的基本思想" class="headerlink" title="面向对象的基本思想"></a>面向对象的基本思想</h2><p>基本思路就是，创建一个对象，给这个对象添加上属性和属性值，还有函数等方法</p><p>之后通过操作这个对象，来完成需要的效果</p><pre><code>// 先通过函数的方法，创建一个对象function createObj()&#123;    // 创建对象    const obj=&#123;&#125;;    // 给对象添加属性和属性值    obj.name=&#39;张三&#39;;    obj.age=18;    obj.sex=&#39;男&#39;;    // 给数组添加方法    obj.funNameAge=function()&#123;        console.log(this.name,this.age);    &#125;    obj.funNameSex=function()&#123;        console.log(this.name,this.sex);    &#125;    obj.funSexAge=function()&#123;        console.log(this.sex,this.age);    &#125;    obj.funAll=function()&#123;        console.log(this.name,this.age,this.sex);    &#125;    // 返回这个创建好的对象    return obj;&#125;// 调用函数，函数创建对象，并且作为返回值// 变量中存储的就是函数创建的对象const obj=createObj();// 可以通过调用obj中存储的方法，来实现功能obj.funAll(); // 张三 18 男</code></pre><h2 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h2><p>所谓的工厂模式是一种书写函数的语法形式，语法规范，就向工厂中的流水线一样，按照步骤来执行需要的操作</p><p>步骤1：创建对象</p><p>步骤2：给对象定义属性和属性值</p><p>步骤3：给对象添加方法</p><p>步骤4：定义对象为返回值</p><pre><code>// 标准的工厂模式，会有对应的参数function createDumplings(pi,mian,xian,liao)&#123;    // 创建包饺子对象    const dumplings=&#123;&#125;;    // 给包饺子对象添加属性    dumplings.pi=pi;    dumplings.mian=mian;    dumplings.xian=xian;    dumplings.liao=liao;    // 给包饺子对象添加方法    // 和面    dumplings.huomian=function()&#123;        console.log(this.mian);    &#125;    // 和饺子馅    dumplings.huoxian=function()&#123;        console.log(this.xian,this.liao);    &#125;    // 包饺子    dumplings.bao=function()&#123;        console.log(this.pi,this.mian,this.xian,this.liao);    &#125;    // 返回包饺子对象    return dumplings;&#125;// 创建一个执行包饺子功能的对象，并且输入参数const dumpling1=createDumplings(&#39;薄皮&#39;,&#39;白面粉&#39;,&#39;猪肉大葱&#39;,&#39;调料1&#39;);const dumpling2=createDumplings(&#39;厚皮&#39;,&#39;黑面粉&#39;,&#39;韭菜鸡蛋&#39;,&#39;调料2&#39;);console.log(dumpling1); // &#123;pi: &quot;薄皮&quot;, mian: &quot;白面粉&quot;, xian: &quot;猪肉大葱&quot;, liao: &quot;调料1&quot;, huomian: ƒ, …&#125;console.log(dumpling2); // &#123;pi: &quot;厚皮&quot;, mian: &quot;黑面粉&quot;, xian: &quot;韭菜鸡蛋&quot;, liao: &quot;调料2&quot;, huomian: ƒ, …&#125;// 调用封装的方法dumpling1.huomian(); // 白面粉dumpling1.huoxian(); // 猪肉大葱 调料1dumpling2.bao(); // 厚皮 黑面粉 韭菜鸡蛋 调料2</code></pre><h2 id="面向对象编程的优点"><a href="#面向对象编程的优点" class="headerlink" title="面向对象编程的优点"></a>面向对象编程的优点</h2><p>高内聚  低耦合</p><p>高内聚：将所有需要的程序，都定义封装在对象内</p><pre><code>    对象中存储所有需要的属性，所有需要的方法</code></pre><p>低耦合：尽量减少特殊程序的执行</p><p>面向对象编程的特点</p><pre><code>抽象 --- 通过描述  对象  共有的特点( 属性和属性值 )，来形容一个对象，这个对象不是一个非常具体事例的内容，是一个抽象化的实例封装 --- 将所有的程序，都定义在一个对象中  </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h1&gt;&lt;p&gt;所谓的面向对象，是一种编程思想，代码的书写格式，之前为了简化代码，我们是将程序封装为函数的形式来调用，函数会有一些小问题：&lt;</summary>
      
    
    
    
    
    <category term="面向对象编程" scheme="https://pickteng.github.io/tag/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>数组坍塌</title>
    <link href="https://pickteng.github.io/posts/3746433508.html"/>
    <id>https://pickteng.github.io/posts/3746433508.html</id>
    <published>2020-04-05T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.279Z</updated>
    
    <content type="html"><![CDATA[<p>当数组删除单元操作时，被删除单元之后的单元，会前移，进而顶替被删除单元，出现在被删除单元的位置上，造成数组长度减少的情况，这样的现象称为数组坍塌。</p><h2 id="正常情况"><a href="#正常情况" class="headerlink" title="正常情况"></a>正常情况</h2><p><img src="/posts/3746433508/20200405185418787.png" alt="数组坍塌"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">正常情况</span></span><br><span class="line"><span class="string">for(var</span> <span class="string">i=0;i&lt;=arr.length-1;i++)&#123;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="数组坍塌情况"><a href="#数组坍塌情况" class="headerlink" title="数组坍塌情况"></a>数组坍塌情况</h2><p><img src="/posts/3746433508/20200405190549836.png" alt="数组坍塌"><br><img src="/posts/3746433508/20200405190605908.png" alt="在这里插入图片描述"><br>例如：我们要删除第三个位置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">数组坍塌情况</span></span><br><span class="line"><span class="string">for(var</span> <span class="string">i=0;i&lt;=arr.length-1;i++)&#123;</span></span><br><span class="line"><span class="string">//</span> <span class="string">当i为2的时候，删除数组单元</span></span><br><span class="line"><span class="string">if(i==2)&#123;</span></span><br><span class="line"><span class="string">arr.splice(i,1)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>但是因为删除了i为2时候的数组单元，后面原来下标为3的数组单元顶替了下标为2的数组单元，称为了下标为2的数组单元，这样就造成了，图片中小红没有被操作过，正常情况下所有的数组单元都会被操作</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">数组坍塌解决</span></span><br><span class="line"><span class="string">for(var</span> <span class="string">i=0;i&lt;=arr.length-1;i++)&#123;</span></span><br><span class="line"><span class="string">//</span> <span class="string">当i为2的时候，删除数组单元</span></span><br><span class="line"><span class="string">//</span> <span class="string">当删除原先的数组单元后，执行i--操作，这样就能操作图片中的小红的数组单元</span></span><br><span class="line"><span class="string">if(i==2)&#123;</span></span><br><span class="line"><span class="string">arr.splice(i,1)</span></span><br><span class="line"><span class="string">i--</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当数组删除单元操作时，被删除单元之后的单元，会前移，进而顶替被删除单元，出现在被删除单元的位置上，造成数组长度减少的情况，这样的现象称为数组坍塌。&lt;/p&gt;
&lt;h2 id=&quot;正常情况&quot;&gt;&lt;a href=&quot;#正常情况&quot; class=&quot;headerlink&quot; title=&quot;正常情</summary>
      
    
    
    
    
    <category term="数组坍塌" scheme="https://pickteng.github.io/tag/%E6%95%B0%E7%BB%84%E5%9D%8D%E5%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>冒泡排序和选择排序</title>
    <link href="https://pickteng.github.io/posts/3383433069.html"/>
    <id>https://pickteng.github.io/posts/3383433069.html</id>
    <published>2020-03-21T00:00:00.000Z</published>
    <updated>2023-08-27T10:07:17.275Z</updated>
    
    <content type="html"><![CDATA[<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p><img src="/posts/3383433069/2020032113154580.gif" alt="冒泡排序"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var arr=[8,7,55,66,98,123,458,985,211,857,1]</span><br><span class="line">for(var i=0;i&lt;=arr.length-1;i++)&#123;</span><br><span class="line">for(var j=0;j&lt;=arr.length-1-i;j++)&#123;</span><br><span class="line">if(arr[j]&gt;arr[j+1])&#123;</span><br><span class="line">var m=0</span><br><span class="line">m=arr[j]</span><br><span class="line">arr[j]=arr[j+1]</span><br><span class="line">arr[j+1]=m</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(arr) //[1, 7, 8, 55, 66, 98, 123, 211, 458, 857, 985]</span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p><img src="/posts/3383433069/20200321131559390.gif" alt="选择排序"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var arr=[8,7,55,66,98,123,458,985,211,857,1]</span><br><span class="line">for(var i=0;i&lt;=arr.length-1;i++)&#123;</span><br><span class="line">var min=i</span><br><span class="line">for(var j=i+1;j&lt;=arr.length-1;j++)&#123;</span><br><span class="line">if(arr[min]&gt;arr[j])&#123;</span><br><span class="line">min=j</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(min!=i)&#123;</span><br><span class="line">var m=0;</span><br><span class="line">m=arr[min]</span><br><span class="line">arr[min]=arr[i]</span><br><span class="line">arr[i]=m</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(arr) //[1, 7, 8, 55, 66, 98, 123, 211, 458, 857, 985]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/posts/3383433069/2020032113154580.gif&quot; alt=&quot;冒泡排序&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="排序" scheme="https://pickteng.github.io/tag/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
